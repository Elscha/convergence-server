actions:

########## ConvergenceSchemaVersionLog Class ##########

  - action: CreateClass
    name: ConvergenceSchemaVersionLog
    properties:
      - {name: version,  type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: date,     type: DateTime,                      constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ConvergenceSchemaVersionLog
    name: ConvergenceSchemaVersionLog.version
    type: Unique
    properties: [version]

########## ConvergenceSchemaDeltaLog Class ##########

  - action: CreateClass
    name: ConvergenceSchemaDeltaLog
    properties:
      - {name: seqNo,    type: Integer,                       constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: id,       type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: tag,      type: String,                        constraints: {                 notNull: true, readOnly: true}}
      - {name: version,  type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: script,   type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: status,   type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: message,  type: String,                        constraints: {                 notNull: true, readOnly: true}}
      - {name: date,     type: DateTime,                      constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ConvergenceSchemaDeltaLog
    name: ConvergenceSchemaDeltaLog.deltaId
    type: Unique
    properties: [id]

  - action: CreateIndex
    className: ConvergenceSchemaDeltaLog
    name: ConvergenceDeltaLog.seqNo
    type: Unique
    properties: [seqNo]


########## DomainSchemaVersionLog Class ##########

  - action: CreateClass
    name: DomainSchemaVersionLog
    properties:
      - {name: domain,   type: Link,    linkedClass: Domain,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: version,  type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: date,     type: DateTime,                      constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainSchemaVersionLog
    name: DomainSchemaVersionLog.version
    type: Unique
    properties: [version]

########## DomainSchemaDeltaLog Class ##########

  - action: CreateClass
    name: DomainSchemaDeltaLog
    properties:
      - {name: domain,   type: Link,    linkedClass: Domain,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: seqNo,    type: Integer,                       constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: id,       type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: tag,      type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: version,  type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: script,   type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: status,   type: String,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: message,  type: String,                        constraints: {                 notNull: true, readOnly: true}}
      - {name: date,     type: DateTime,                      constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainSchemaDeltaLog
    name: DomainSchemaDeltaLog.domain_id
    type: Unique
    properties: [domain, id]

  - action: CreateIndex
    className: DomainSchemaDeltaLog
    name: DomainSchemaDeltaLog.domain_seqNo
    type: Unique
    properties: [domain, seqNo]

########## Config Class ##########

  - action: CreateClass
    name: Config
    properties:
      - {name: key,   type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: value, type: Any,    constraints: {mandatory: true, notNull: true, readOnly: false}}

  - action: CreateIndex
    className: Config
    name: Config.key
    type: UniqueHashIndex
    properties: [key]


########## User Class ##########

  - action: CreateClass
    name: User
    properties:
      - {name: username,       type: String,   constraints: {mandatory: true,   notNull: true}}
      - {name: email,           type: String,   constraints: {mandatory: true,   notNull: true}}
      - {name: firstName,       type: String,   constraints: {mandatory: true,   notNull: true}}
      - {name: lastName,        type: String,   constraints: {mandatory: true,   notNull: true}}
      - {name: displayName,     type: String,   constraints: {mandatory: true,   notNull: true}}
      - {name: lastLogin,       type: DateTime, constraints: {mandatory: false,  notNull: true}}
      - {name: bearerToken,     type: String,   constraints: {mandatory: true,   notNull: true}}
      - {name: passwordHash,    type: String,   constraints: {mandatory: true,  notNull: true}}
      - {name: passwordLastSet, type: DateTime, constraints: {mandatory: true,  notNull: true}}

  - action: CreateIndex
    className: User
    name: User.username
    type: Unique
    properties: [username]

  - action: CreateIndex
    className: User
    name: User.email
    type: Unique
    properties: [email]

  - action: CreateIndex
    className: User
    name: User.bearerToken
    type: Unique
    properties: [bearerToken]

########## UserApiKey Class ##########

  - action: CreateClass
    name: UserApiKey
    properties:
      - {name: user,     type: Link,   linkedClass: User, constraints: {mandatory: true,  notNull: true, readOnly: true}}
      - {name: name,     type: String,                    constraints: {mandatory: true,  notNull: true}}
      - {name: key,      type: String,                    constraints: {mandatory: true,  notNull: true}}
      - {name: enabled,  type: Boolean,                   constraints: {mandatory: true,  notNull: true}}
      - {name: lastUsed, type: DateTime,                  constraints: {mandatory: false, notNull: true}}

  - action: CreateIndex
    className: UserApiKey
    name: UserApiKey.key
    type: Unique
    properties: [key]

  - action: CreateIndex
    className: UserApiKey
    name: UserApiKey.user_name
    type: Unique
    properties: [user, name]


########## UserSessionToken Class ##########

  - action: CreateClass
    name: UserSessionToken
    properties:
      - {name: token,     type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user,      type: Link,     linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: expiresAt, type: DateTime,                    constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: UserSessionToken
    name: UserSessionToken.token
    type: Unique
    properties: [token]


########## Namespace Class ##########

  - action: CreateClass
    name: Namespace
    properties:
      - {name: id,            type: String,  constraints: {mandatory: true, notNull: true}}
      - {name: displayName,   type: String,  constraints: {mandatory: true, notNull: true}}
      - {name: userNamespace, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: Namespace
    name: Namespace.id
    type: UniqueHashIndex
    properties: [id]

  - action: CreateIndex
    className: Namespace
    name: Namespace.displayName
    type: UniqueHashIndex
    properties: [displayName]


########## Domain Class ##########

  - action: CreateClass
    name: Domain
    properties:
      - {name: id,                    type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: namespace,             type: Link,   linkedClass: Namespace, constraints: {mandatory: true, notNull: true}}
      - {name: displayName,           type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: status,                type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: statusMessage,         type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: databaseName,          type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: databaseUsername,      type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: databasePassword,      type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: databaseAdminUsername, type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: databaseAdminPassword, type: String,                         constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: Domain
    name: Domain.namespace_id
    type: UniqueHashIndex
    properties: [namespace, id]

  - action: CreateIndex
    className: Domain
    name: Domain.databaseName
    type: UniqueHashIndex
    properties: [databaseName]


########## UserFavoriteDomain Class ##########

  - action: CreateClass
    name: UserFavoriteDomain
    properties:
      - {name: user,   type: Link, linkedClass: User,   constraints: {mandatory: true, notNull: true}}
      - {name: domain, type: Link, linkedClass: Domain, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: UserFavoriteDomain
    name: UserFavoriteDomain.user
    type: NotUniqueHashIndex
    properties: [domain]

  - action: CreateIndex
    className: UserFavoriteDomain
    name: UserFavoriteDomain.domain
    type: NotUniqueHashIndex
    properties: [user]

  - action: CreateIndex
    className: UserFavoriteDomain
    name: UserFavoriteDomain.user_domain
    type: UniqueHashIndex
    properties: [user, domain]


########## Permission Class ##########

  - action: CreateClass
    name: Permission
    properties:
      - {name: id,          type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: name,        type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: description, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: Permission
    name: Permission.id
    type: Unique
    properties: [id]

  - action: CreateIndex
    className: Permission
    name: Permission.name
    type: Unique
    properties: [name]


########## Role Class ##########

  - action: CreateClass
    name: Role
    properties:
      - {name: name,        type: String,                          constraints: {mandatory: true,  notNull: true, readOnly: true}}
      - {name: targetClass, type: String,                          constraints: {mandatory: false, notNull: true, readOnly: true}}
      - {name: permissions, type: EmbeddedSet, linkedType: String, constraints: {mandatory: true,  notNull: true}}

  - action: CreateIndex
    className: Role
    name: Role.name_targetClass
    type: Unique
    properties: [name, targetClass]


########## UserRole Class ##########

  - action: CreateClass
    name: UserRole
    properties:
      - {name: user,   type: Link, linkedClass: User,   constraints: {mandatory: true,  notNull: true, readOnly: true}}
      - {name: role,   type: Link, linkedClass: Role,   constraints: {mandatory: true,  notNull: true, readOnly: true}}
      - {name: target, type: Link,                      constraints: {mandatory: false, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: UserRole
    name: UserRole.user_role_target
    type: Unique
    properties: [user, role, target]


########## Role Data ##########

  - action: RunSqlCommand
    command: |-
      INSERT INTO Role SET name = "Developer", permissions = ["access"];
      INSERT INTO Role SET name = "Domain Admin", permissions = ["access", "manage-domains"];
      INSERT INTO Role SET name = "Server Admin", permissions = ["access", "manage-domains", "manage-settings", "manage-users"];

      INSERT INTO Role SET name = "Developer", targetClass = "Namespace", permissions = ["namespace-access"];
      INSERT INTO Role SET name = "Domain Admin", targetClass = "Namespace", permissions = ["namespace-access", "namespace-manage-domains"];
      INSERT INTO Role SET name = "Owner", targetClass = "Namespace", permissions = ["namespace-access", "namespace-manage-domains", "namespace-manage-users"];

      INSERT INTO Role SET name = "Developer", targetClass = "Domain", permissions = ["domain-access"];
      INSERT INTO Role SET name = "Domain Admin", targetClass = "Domain", permissions = ["domain-access", "domain-manage-settings"];
      INSERT INTO Role SET name = "Owner", targetClass = "Domain", permissions = ["domain-access", "domain-manage-settings", "domain-manage-users"];


  - action: RunSqlCommand
    command: |-
      INSERT INTO Config SET key = "namespaces.enabled", value = true;
      INSERT INTO Config SET key = "namespaces.user-namespaces-enabled", value = true;
      INSERT INTO Config SET key = "namespaces.default-namespace", value = "default-namespace";

      INSERT INTO Config SET key = "domains.mode", value = "multi-domain";
      INSERT INTO Config SET key = "domains.default-domain-id", value = "default-domain";

      INSERT INTO Config SET key = "passwords.minimum-length", value = 6;
      INSERT INTO Config SET key = "passwords.require-numeric", value = true;
      INSERT INTO Config SET key = "passwords.require-lower-case", value = true;
      INSERT INTO Config SET key = "passwords.require-upper-case", value = true;
      INSERT INTO Config SET key = "passwords.require-special-characters", value = true;

      INSERT INTO Config SET key = "sessions.timeout", value = 60;
