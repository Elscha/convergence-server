version: 1
description: Initial Convergence schema creation

actions:

########## DomainDelta Class ##########

  - action: CreateClass
    name: DomainDelta
    properties:
      - {name: deltaNo, type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: value,   type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainDelta
    name: DomainDelta.deltaNo
    type: Unique
    properties: [deltaNo]


########## DomainDeltaHistory Class ##########

  - action: CreateClass
    name: DomainDeltaHistory
    properties:
      - {name: domain,  type: Link,    linkedClass: Domain,      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: delta,   type: Link,    linkedClass: DomainDelta, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: status,  type: String,                            constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: message, type: String,                            constraints: {                 notNull: true, readOnly: true}}
      - {name: date,    type: DateTime,                          constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainDeltaHistory
    name: DomainDeltaHistory.domain_delta
    type: Unique
    properties: [domain, delta]


########## ConvergenceDelta Class ##########

  - action: CreateClass
    name: ConvergenceDelta
    properties:
      - {name: deltaNo, type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: value,   type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ConvergenceDelta
    name: ConvergenceDelta.deltaNo
    type: Unique
    properties: [deltaNo]


########## ConvergenceDeltaHistory Class ##########

  - action: CreateClass
    name: ConvergenceDeltaHistory
    properties:
      - {name: delta,   type: Link,    linkedClass: ConvergenceDelta, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: status,  type: String,                                 constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: message, type: String,                                 constraints: {                 notNull: true, readOnly: true}}
      - {name: date,    type: DateTime,                               constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ConvergenceDeltaHistory
    name: ConvergenceDeltaHistory.delta
    type: Unique
    properties: [delta]


########## User Class ##########

  - action: CreateClass
    name: User
    properties:
      - {name: username,    type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: email,       type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: firstName,   type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: lastName,    type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: displayName, type: String,   constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: User
    name: User.username
    type: Unique
    properties: [username]

  - action: CreateIndex
    className: User
    name: User.email
    type: Unique
    properties: [email]


########## UserCredential Class ##########

  - action: CreateClass
    name: UserCredential
    properties:
      - {name: user,     type: Link,   linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: password, type: String,                    constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: UserCredential
    name: UserCredential.user
    type: Unique
    properties: [user]


 ########## UserIntegrationTokens Class ##########

  - action: CreateClass
    name: UserIntegrationToken
    properties:
      - {name: user,    type: Link,   linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: name,    type: Link,   linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: token,   type: String,                    constraints: {mandatory: true, notNull: true}}
      - {name: enabled, type: Boolean,                   constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: UserIntegrationToken
    name: UserIntegrationToken.token
    type: Unique
    properties: [token]


########## UserAuthToken Class ##########

  - action: CreateClass
    name: UserAuthToken
    properties:
      - {name: user,       type: Link,     linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: token,      type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: expireTime, type: DateTime,                    constraints: {mandatory: true, notNull: true}}


########## Namespace Class ##########

  - action: CreateClass
    name: Namespace
    properties:
      - {name: id,            type: String,                    constraints: {mandatory: true, notNull: true}}
      - {name: displayName,   type: String,                    constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: Namespace
    name: Namespace.id
    type: UniqueHashIndex
    properties: [id]


########## Domain Class ##########

  - action: CreateClass
    name: Domain
    properties:
      - {name: id,              type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: namespace,       type: Link,   linkedClass: Namespace, constraints: {mandatory: true, notNull: true}}
      - {name: displayName,     type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: status,          type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: statusMessage,   type: String,                         constraints: {mandatory: true, notNull: true}}
      - {name: dbName,          type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: dbUsername,      type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: dbPassword,      type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: dbAdminUsername, type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: dbAdminPassword, type: String,                      constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: Domain
    name: Domain.namespace_id
    type: UniqueHashIndex
    properties: [namespace, id]


########## Permission Class ##########

  - action: CreateClass
    name: Permission
    properties:
      - {name: id,          type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: name,        type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: description, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: Permission
    name: Permission.id
    type: Unique
    properties: [id]

  - action: CreateIndex
    className: Permission
    name: Permission.name
    type: Unique
    properties: [name]


########## Role Class ##########

  - action: CreateClass
    name: Role
    properties:
      - {name: name,        type: String,                            constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: permissions, type: LinkList, linkedClass: Permission, constraints: {mandatory: true, notNull: true}}
      - {name: description, type: String,                            constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: Role
    name: Role.id
    type: Unique
    properties: [name]


########## UserRole Class ##########

  - action: CreateClass
    name: UserRole
    properties:
      - {name: user,   type: Link, linkedClass: User,   constraints: {mandatory: true,  notNull: true, readOnly: true}}
      - {name: role,   type: Link, linkedClass: Role,   constraints: {mandatory: true,  notNull: true, readOnly: true}}
      - {name: target, type: Link,                      constraints: {mandatory: false, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: UserRole
    name: UserDomainRole.user_role_target
    type: Unique
    properties: [user, role, target]
