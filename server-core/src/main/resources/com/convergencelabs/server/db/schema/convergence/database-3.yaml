version: 3
changes:


########## DomainDelta Class ##########

  - action: CreateClass
    name: DomainDelta
    properties:
      - {name: deltaNo, type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: value,   type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainDelta
    name: DomainDelta.deltaNo
    type: Unique
    properties: [deltaNo]


########## DomainDeltaHistory Class ##########

  - action: CreateClass
    name: DomainDeltaHistory
    properties:
      - {name: domain,  type: Link,    linkedClass: Domain,      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: delta,   type: Link,    linkedClass: DomainDelta, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: status,  type: String,                            constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: message, type: String,                            constraints: {                 notNull: true, readOnly: true}}
      - {name: date,    type: DateTime,                          constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainDeltaHistory
    name: DomainDeltaHistory.domain_delta
    type: Unique
    properties: [domain, delta]


########## ConvergenceDelta Class ##########

  - action: CreateClass
    name: ConvergenceDelta
    properties:
      - {name: deltaNo, type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: value,   type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ConvergenceDelta
    name: ConvergenceDelta.deltaNo
    type: Unique
    properties: [deltaNo]


########## ConvergenceDeltaHistory Class ##########

  - action: CreateClass
    name: ConvergenceDeltaHistory
    properties:
      - {name: delta,   type: Link,    linkedClass: ConvergenceDelta, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: status,  type: String,                                 constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: message, type: String,                                 constraints: {                 notNull: true, readOnly: true}}
      - {name: date,    type: DateTime,                               constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ConvergenceDeltaHistory
    name: ConvergenceDeltaHistory.delta
    type: Unique
    properties: [delta]


########## User Class ##########

  - action: CreateClass
    name: User
    properties:
      - {name: username,    type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: email,       type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: firstName,   type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: lastName,    type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: displayName, type: String,   constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: User
    name: User.username
    type: Unique
    properties: [username]

  - action: CreateIndex
    className: User
    name: User.email
    type: Unique
    properties: [email]


########## UserCredential Class ##########

  - action: CreateClass
    name: UserCredential
    properties:
      - {name: user,     type: Link,   linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: password, type: String,                    constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: UserCredential
    name: UserCredential.user
    type: Unique
    properties: [user]


########## UserAuthToken Class ##########

  - action: CreateClass
    name: UserAuthToken
    properties:
      - {name: user,       type: Link,     linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: token,      type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: expireTime, type: DateTime,                    constraints: {mandatory: true, notNull: true}}


########## Domain Class ##########

  - action: CreateClass
    name: Domain
    properties:
      - {name: id,            type: String,                    constraints: {mandatory: true, notNull: true}}
      - {name: namespace,     type: String,                    constraints: {mandatory: true, notNull: true}}
      - {name: displayName,   type: String,                    constraints: {mandatory: true, notNull: true}}
      - {name: owner,         type: Link,   linkedClass: User, constraints: {mandatory: true, notNull: true}}
      - {name: status,        type: String,                    constraints: {mandatory: true, notNull: true}}
      - {name: statusMessage, type: String,                    constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: Domain
    name: Domain.namespace_id
    type: UniqueHashIndex
    properties: [namespace, id]


########## Domain Database ##########

  - action: CreateClass
    name: DomainDatabase
    properties:
      - {name: domain,        type: Link,   linkedClass: Domain, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: database,      type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: username,      type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: password,      type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: adminUsername, type: String,                      constraints: {mandatory: true, notNull: true}}
      - {name: adminPassword, type: String,                      constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: DomainDatabase
    name: DomainDatabase.database
    type: Unique
    properties: [database]

  - action: CreateIndex
    className: DomainDatabase
    name: DomainDatabase.domain
    type: UniqueHashIndex
    properties: [domain]


########## Registration Class ##########

  - action: CreateClass
    name: Registration
    properties:
      - {name: email,    type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: fname,    type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: lname,    type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: reason,   type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: token,    type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: approved, type: Boolean, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: Registration
    name: Registration.email
    type: Unique
    properties: [email]

  - action: CreateIndex
    className: Registration
    name: Registration.email_token
    type: Unique
    properties: [email, token]

########## Permission Class ##########

  - action: CreateClass
    name: Permission
    properties:
      - {name: id,          type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: name,        type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: description, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: Permission
    name: Permission.id
    type: Unique
    properties: [id]

  - action: CreateIndex
    className: Permission
    name: Permission.name
    type: Unique
    properties: [name]


########## Role Class ##########

  - action: CreateClass
    name: Role
    properties:
      - {name: name,        type: String,                            constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: permissions, type: LinkList, linkedClass: Permission, constraints: {mandatory: true, notNull: true}}
      - {name: description, type: String,                            constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: Role
    name: Role.id
    type: Unique
    properties: [name]

########## UserDomainRole Class ##########

  - action: CreateClass
    name: UserDomainRole
    properties:
      - {name: user,   type: Link, linkedClass: User,   constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: domain, type: Link, linkedClass: Domain, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: role,   type: Link, linkedClass: Role,   constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: UserDomainRole
    name: UserDomainRole.user_domain_role
    type: Unique
    properties: [user, domain, role]
