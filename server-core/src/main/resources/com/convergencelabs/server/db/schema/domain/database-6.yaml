version: 5
changes:

########## DateTimeFormat ##########

  - action: RunSQLCommand
    command: "ALTER DATABASE DATETIMEFORMAT \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";"


########## ModelSnapshotConfig Class ##########

  - action: CreateClass
    name: ModelSnapshotConfig
    properties:
      - {name: enabled,            type: Boolean, constraints: {mandatory: true, notNull: true}}
      - {name: triggerByVersion,   type: Boolean, constraints: {mandatory: true, notNull: true}}
      - {name: limitedByVersion,   type: Boolean, constraints: {mandatory: true, notNull: true}}
      - {name: minVersionInterval, type: Long,    constraints: {mandatory: true, notNull: true}}
      - {name: maxVersionInterval, type: Long,    constraints: {mandatory: true, notNull: true}}
      - {name: triggerByTime,      type: Boolean, constraints: {mandatory: true, notNull: true}}
      - {name: limitedByTime,      type: Boolean, constraints: {mandatory: true, notNull: true}}
      - {name: minTimeInterval,    type: Long,    constraints: {mandatory: true, notNull: true}}
      - {name: maxTimeInterval,    type: Long,    constraints: {mandatory: true, notNull: true}}


########## DomainConfig Class ##########

  - action: CreateClass
    name: DomainConfig
    properties:
      - {name: modelSnapshotConfig, type: Embedded, linkedClass: ModelSnapshotConfig, constraints: {mandatory: true, notNull: true}}
      - {name: adminPublicKey,      type: String,                                     constraints: {mandatory: true, notNull: true}}
      - {name: adminPrivateKey,     type: String,                                     constraints: {mandatory: true, notNull: true}}
      - {name: anonymousAuth,       type: Boolean,                                    constraints: {mandatory: true, notNull: true}}


########## JwtAuthKey Class ##########

  - action: CreateClass
    name: JwtAuthKey
    properties:
      - {name: id,          type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: description, type: String,   constraints: {mandatory: true, notNull: true}}
      - {name: updated,     type: DateTime, constraints: {mandatory: true, notNull: true}}
      - {name: enabled,     type: Boolean,  constraints: {mandatory: true, notNull: true}}
      - {name: key,         type: String,   constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: JwtAuthKey
    name: JwtAuthKey.id
    type: UniqueHashIndex
    properties: [id]


########## User Class ##########

  - action: CreateClass
    name: User
    properties:
      - {name: userType,     type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: username,     type: String, constraints: {mandatory: true, notNull: true}}
      - {name: email,        type: String, constraints: {notNull: true}}
      - {name: firstName,    type: String, constraints: {notNull: true}}
      - {name: lastName,     type: String, constraints: {notNull: true}}
      - {name: displayName,  type: String, constraints: {notNull: true}}

  - action: CreateIndex
    className: User
    name: User.username
    type: Unique
    properties: [username]

  - action: CreateIndex
    className: User
    name: User.email
    type: Unique
    properties: [email]
    metaData:
      ignoreNullValues: true


########## UserCredential Class ##########

  - action: CreateClass
    name: UserCredential
    properties:
      - {name: user,     type: Link,   linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: password, type: String,                    constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: UserCredential
    name: UserCredential.user
    type: Unique
    properties: [user]


######### Session ##########

  - action: CreateClass
    name: DomainSession
    properties:
      - {name: id,             type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user,           type: Link,     linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: connected,      type: DateTime,                    constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: disconnected,   type: DateTime,                    constraints: {                 notNull: true, readOnly: true}}
      - {name: authMethod,     type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: client,         type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: clientVersion,  type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: clientMetaData, type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: remoteHost,     type: String,                      constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: DomainSession
    name: DomainSession.user
    type: NotUniqueHashIndex
    properties: [user]

  - action: CreateIndex
    className: DomainSession
    name: DomainSession.id
    type: UniqueHashIndex
    properties: [id]


########## Collection Class ##########

  - action: CreateClass
    name: Collection
    properties:
      - {name: id,                     type: String,                                       constraints: {mandatory: true, notNull: true}}
      - {name: name,                   type: String,                                       constraints: {mandatory: true, notNull: true}}
      - {name: overrideSnapshotConfig, type: Boolean,                                      constraints: {mandatory: true, notNull: true, default: false}}
      - {name: snapshotConfig,         type: Embedded, linkedClass: ModelSnapshotConfig,   constraints: {notNull: true}}
      - {name: worldPermissions,       type: Embedded, linkedClass: CollectionPermissions, constraints: {mandatory: true, notNull: true, readOnly: false}}

  - action: CreateIndex
    className: Collection
    name: Collection.id
    type: UniqueHashIndex
    properties: [id]


########## Model Class ##########

  - action: CreateClass
    name: Model
    properties:
      - {name: collection,          type: Link,     linkedClass: Collection,       constraints: {mandatory: true, notNull: true}}
      - {name: id,                  type: String,                                  constraints: {mandatory: true, notNull: true}}
      - {name: version,             type: Long,                                    constraints: {mandatory: true, notNull: true, min: 1}}
      - {name: createdTime,         type: DateTime,                                constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: modifiedTime,        type: DateTime,                                constraints: {mandatory: true, notNull: true}}
      - {name: data,                type: Link,     linkedClass: ObjectValue,      constraints: {mandatory: true, notNull: true}}
      - {name: overridePermissions, type: Boolean,                                 constraints: {notNull: true, readOnly: false, default: false}}
      - {name: worldPermissions,    type: Embedded, linkedClass: ModelPermissions, constraints: {mandatory: true, notNull: true, readOnly: false}}
      - {name: userPermissions,     type: LinkList, linkedClass: ModelUserPermissions}

  - action: CreateIndex
    className: Model
    name: Model.collection_id
    type: UniqueHashIndex
    properties: [collection, id]
    
  - action: CreateIndex
    className: Model
    name: Model.id
    type: UniqueHashIndex
    properties: [id]


########## ModelSnapshot Class ##########

  - action: CreateClass
    name: ModelSnapshot
    properties:
      - {name: model,     type: Link,     linkedClass: Model,         constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: version,   type: Long,                                 constraints: {mandatory: true, notNull: true, readOnly: true, min: 1}}
      - {name: timestamp, type: DateTime,                             constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: data,      type: Embedded, linkedClass: ObjectOpValue, constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ModelSnapshot
    name: ModelSnapshot.model_version
    type: Unique
    properties: [model, version]

  - action: CreateIndex
    className: ModelSnapshot
    name: ModelSnapshot.model
    type: NotUniqueHashIndex
    properties: [model]


########## DataValue Class ##########

  - action: CreateClass
    name: DataValue
    abstract: true
    properties:
      - {name: id,    type: String,                   constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: model, type: Link, linkedClass: Model, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## ObjectValue Class ##########

  - action: CreateClass
    name: ObjectValue
    superclass: DataValue
    properties:
      - {name: children, type: LinkMap, linkedClass: DataValue, constraints: {mandatory: true, notNull: true}}


########## ArrayValue Class ##########

  - action: CreateClass
    name: ArrayValue
    superclass: DataValue
    properties:
      - {name: children, type: LinkList, constraints: {mandatory: true, notNull: true}}


########## StringValue Class ##########

  - action: CreateClass
    name: StringValue
    superclass: DataValue
    properties:
      - {name: value, type: String, constraints: {mandatory: true, notNull: true}}


########## DoubleValue Class ##########

  - action: CreateClass
    name: DoubleValue
    superclass: DataValue
    properties:
      - {name: value, type: Double, constraints: {mandatory: true, notNull: true}}


########## BooleanValue Class ##########

  - action: CreateClass
    name: BooleanValue
    superclass: DataValue
    properties:
      - {name: value, type: Boolean, constraints: {mandatory: true, notNull: true}}


########## NullValue Class ##########

  - action: CreateClass
    name: NullValue
    superclass: DataValue
    
########## DateValue Class ##########

  - action: CreateClass
    name: DateValue
    superclass: DataValue
    properties:
      - {name: value, type: DateTime, constraints: {mandatory: true, notNull: true}}


########## OpValue Class ##########

  - action: CreateClass
    name: OpValue
    abstract: true
    properties:
      - {name: id, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## ObjectOpValue Class ##########

  - action: CreateClass
    name: ObjectOpValue
    superclass: OpValue
    properties:
      - {name: children, type: EmbeddedMap, linkedClass: OpValue, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## ArrayOpValue Class ##########

  - action: CreateClass
    name: ArrayOpValue
    superclass: OpValue
    properties:
      - {name: children, type: EmbeddedList, linkedClass: OpValue, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## StringOpValue Class ##########

  - action: CreateClass
    name: StringOpValue
    superclass: OpValue
    properties:
      - {name: value, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## DoubleOpValue Class ##########

  - action: CreateClass
    name: DoubleOpValue
    superclass: OpValue
    properties:
      - {name: value, type: Double, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## BooleanOpValue Class ##########

  - action: CreateClass
    name: BooleanOpValue
    superclass: OpValue
    properties:
      - {name: value, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## NullOpValue Class ##########

  - action: CreateClass
    name: NullOpValue
    superclass: OpValue

########## DateOpValue Class ##########

  - action: CreateClass
    name: DateOpValue
    superclass: OpValue
    properties:
      - {name: value, type: DateTime, constraints: {mandatory: true, notNull: true, readOnly: true}}

########## Operation Class ##########

  - action: CreateClass
    name: Operation
    abstract: true


########## DiscreteOperation Class ##########

  - action: CreateClass
    name: DiscreteOperation
    superclass: Operation
    abstract: true
    properties:
      - {name: elementId, type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: noOp,      type: Boolean, constraints: {notNull: true, readOnly: true, default: false}}


########## CompoundOperation Class ##########

  - action: CreateClass
    name: CompoundOperation
    superclass: Operation
    properties:
      - {name: ops, type: EmbeddedList, linkedClass: DiscreteOperation, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## StringInsertOperation Class ##########

  - action: CreateClass
    name: StringInsertOperation
    superclass: DiscreteOperation
    properties:
      - {name: idx, type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: val, type: String,  constraints: {mandatory: true, notNull: true, readOnly: true}}


########## StringRemoveOperation Class ##########

  - action: CreateClass
    name: StringRemoveOperation
    superclass: DiscreteOperation
    properties:
      - {name: idx,    type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: length, type: Integer, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: String,  constraints: {mandatory: true}}


########## StringSetOperation Class ##########

  - action: CreateClass
    name: StringSetOperation
    superclass: DiscreteOperation
    properties:
      - {name: val,    type: String, constraints: {mandatory: true, readOnly: true}}
      - {name: oldVal, type: String, constraints: {mandatory: true, readOnly: true}}


########## ObjectSetPropertyOperation Class ##########

  - action: CreateClass
    name: ObjectSetPropertyOperation
    superclass: DiscreteOperation
    properties:
      - {name: prop,   type: String,                         constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: val,    type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}
      - {name: oldVal, type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## ObjectAddPropertyOperation Class ##########

  - action: CreateClass
    name: ObjectAddPropertyOperation
    superclass: DiscreteOperation
    properties:
      - {name: prop, type: String,                         constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: val,  type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## ObjectRemovePropertyOperation Class ##########

  - action: CreateClass
    name: ObjectRemovePropertyOperation
    superclass: DiscreteOperation
    properties:
      - {name: prop,   type: String,                         constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## ObjectSetOperation Class ##########

  - action: CreateClass
    name: ObjectSetOperation
    superclass: DiscreteOperation
    properties:
      - {name: val,    type: EmbeddedMap, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}
      - {name: oldVal, type: EmbeddedMap, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## NumberAddOperation Class ##########

  - action: CreateClass
    name: NumberAddOperation
    superclass: DiscreteOperation
    properties:
      - {name: val, type: Any, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## NumberSetOperation Class ##########

  - action: CreateClass
    name: NumberSetOperation
    superclass: DiscreteOperation
    properties:
      - {name: val,    type: Any, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: Any, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## BooleanSetOperation Class ##########

  - action: CreateClass
    name: BooleanSetOperation
    superclass: DiscreteOperation
    properties:
      - {name: val,    type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: true}}


########## ArrayInsertOperation Class ##########

  - action: CreateClass
    name: ArrayInsertOperation
    superclass: DiscreteOperation
    properties:
      - {name: idx, type: Integer,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: val, type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## ArrayRemoveOperation Class ##########

  - action: CreateClass
    name: ArrayRemoveOperation
    superclass: DiscreteOperation
    properties:
      - {name: idx,    type: Integer,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## ArrayReplaceOperation Class ##########

  - action: CreateClass
    name: ArrayReplaceOperation
    superclass: DiscreteOperation
    properties:
      - {name: idx,    type: Integer,                        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: val,    type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}
      - {name: oldVal, type: Embedded, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}


########## ArrayMoveOperation Class ##########

  - action: CreateClass
    name: ArrayMoveOperation
    superclass: DiscreteOperation
    properties:
      - {name: fromIdx, type: Integer,   constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: toIdx,   type: Integer,   constraints: {mandatory: true, notNull: true, readOnly: true}}


########## ArraySetOperation Class ##########

  - action: CreateClass
    name: ArraySetOperation
    superclass: DiscreteOperation
    properties:
      - {name: val,    type: EmbeddedList, linkedClass: OpValue, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: EmbeddedList, linkedClass: OpValue, constraints: {mandatory: true, readOnly: true}}
      
########## DateSetOperation Class ##########

  - action: CreateClass
    name: DateSetOperation
    superclass: DiscreteOperation
    properties:
      - {name: val,    type: DateTime, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: oldVal, type: DateTime, constraints: {mandatory: true, notNull: true, readOnly: true}}

########## ModelOperation Class ##########

  - action: CreateClass
    name: ModelOperation
    properties:
      - {name: model,     type: Link,     linkedClass: Model,         constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: version,   type: Long,                                 constraints: {mandatory: true, notNull: true, min: 1, readOnly: true}}
      - {name: timestamp, type: DateTime,                             constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: session,   type: Link,     linkedClass: DomainSession, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: operation, type: Link,     linkedClass: Operation,     constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ModelOperation
    name: ModelOperation.model_version
    type: Unique
    properties: [model, version]

  - action: CreateIndex
    className: ModelOperation
    name: ModelOperation.model
    type: NotUniqueHashIndex
    properties: [model]

########## CollectionPermissions ##########

  - action: CreateClass
    name: CollectionPermissions
    properties:
      - {name: read,       type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: write,      type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: create,     type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: remove,     type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: manage,     type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}

########## CollectionUserPermissions ##########

  - action: CreateClass
    name: CollectionUserPermissions
    properties:
      - {name: collection, type: Link,   linkedClass: Collection, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user, type: Link, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: permissions, type: Embedded, linkedClass: CollectionPermissions, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: CollectionUserPermissions
    name: CollectionUserPermissions.user_collection
    type: Unique
    properties: [user, collection]

  - action: CreateIndex
    className: CollectionUserPermissions
    name: CollectionUserPermissions.user
    type: NotUniqueHashIndex
    properties: [user]
  
  - action: CreateIndex
    className: CollectionUserPermissions
    name: CollectionUserPermissions.collection
    type: NotUniqueHashIndex
    properties: [collection]

########## ModelPermissions ##########

  - action: CreateClass
    name: ModelPermissions
    properties:
      - {name: read,   type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: write,  type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: remove, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: manage, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}

########## ModelUserPermissions ##########

  - action: CreateClass
    name: ModelUserPermissions
    properties:
      - {name: model,  type: Link,   linkedClass: Model, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user, type: Link, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: permissions, type: Embedded, linkedClass: ModelPermissions, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: ModelUserPermissions
    name: ModelUserPermissions.user_model
    type: Unique
    properties: [user, model]
    
  - action: CreateIndex
    className: ModelUserPermissions
    name: ModelUserPermissions.user
    type: NotUniqueHashIndex
    properties: [user]
  
  - action: CreateIndex
    className: ModelUserPermissions
    name: ModelUserPermissions.model
    type: NotUniqueHashIndex
    properties: [model]
    
########## ChatChannel Class ##########

  - action: CreateClass
    name: ChatChannel
    properties:
      - {name: id,      type: String,                                  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: type,    type: String,                                  constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: created, type: DateTime,                                constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: private, type: Boolean,                                 constraints: {mandatory: true, notNull: true}}
      - {name: name,    type: String,                                  constraints: {mandatory: true, notNull: true}}
      - {name: topic,   type: String,                                  constraints: {mandatory: true, notNull: true}}
      - {name: members, type: LinkSet, linkedClass: ChatChannelMember, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: ChatChannel
    name: ChatChannel.id
    type: UniqueHashIndex
    properties: [id]

########## ChatChannelEvent Class ##########

  - action: CreateClass
    name: ChatChannelEvent
    abstract: true
    properties:
      - {name: eventNo,   type: Long,                           constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: channel,   type: Link, linkedClass: ChatChannel, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user,      type: Link, linkedClass: User,        constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: timestamp, type: DateTime,                       constraints: {mandatory: true, notNull: true, readOnly: true}}

  - action: CreateIndex
    className: ChatChannelEvent
    name: ChatChannel.channel_eventNo
    type: UniqueHashIndex
    properties: [channel, eventNo]

  - action: CreateIndex
    className: ChatChannelEvent
    name: ChatChannelEvent.channel
    type: NotUniqueHashIndex
    properties: [channel]

########## ChatCreatedEvent Class ##########

  - action: CreateClass
    name: ChatCreatedEvent
    superclass: ChatChannelEvent
    properties:
      - {name: name,    type: String,                     constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: topic,   type: String,                     constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: members, type: LinkSet, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}

########## ChatMessageEvent Class ##########

  - action: CreateClass
    name: ChatMessageEvent
    superclass: ChatChannelEvent
    properties:
      - {name: message, type: String, constraints: {mandatory: true, notNull: true}}

########## ChatUserJoinedEvent Class ##########

  - action: CreateClass
    name: ChatUserJoinedEvent
    superclass: ChatChannelEvent

########## ChatUserLeftEvent Class ##########

  - action: CreateClass
    name: ChatUserLeftEvent
    superclass: ChatChannelEvent
    
########## ChatUserAddedEvent Class ##########

  - action: CreateClass
    name: ChatUserAddedEvent
    superclass: ChatChannelEvent
    properties:
      - {name: userAdded, type: Link, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
    
########## ChatUserRemovedEvent Class ##########

  - action: CreateClass
    name: ChatUserRemovedEvent
    superclass: ChatChannelEvent
    properties:
      - {name: userRemoved, type: Link, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}

########## ChatNameChangedEvent Class ##########

  - action: CreateClass
    name: ChatNameChangedEvent
    superclass: ChatChannelEvent
    properties:
      - {name: name, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
      
########## ChatTopicChangedEvent Class ##########

  - action: CreateClass
    name: ChatTopicChangedEvent
    superclass: ChatChannelEvent
    properties:
      - {name: topic, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}

########## ChatChannelMember Class ##########

  - action: CreateClass
    name: ChatChannelMember

    properties:
      - {name: channel, type: Link, linkedClass: ChatChannel, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user,    type: Link, linkedClass: User,    constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: seen,    type: Long,                       constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: ChatChannelMember
    name: ChatChannelUserState.channel_user
    type: UniqueHashIndex
    properties: [channel, user]

  - action: CreateIndex
    className: ChatChannelMember
    name: ChatChannelMember.channel
    type: NotUniqueHashIndex
    properties: [channel]

########## Permission Class ##########

  - action: CreateClass
    name: Permission
    properties:
      - {name: appliesTo,  type: Link,   constraints: {notNull: true, readOnly: true}}
      - {name: permission, type: String, constraints: {mandatory: true, notNull: true, readOnly: true}}
    
 ########## PermissionAssignment Class ##########

  - action: CreateClass
    name: PermissionAssignment
    properties:
      - {name: assignment, type: Link,                          constraints: {notNull: true, readOnly: true}}
      - {name: permission, type: Link, linkedClass: Permission, constraints: {mandatory: true, notNull: true, readOnly: true}}

########## Sequences ##########

  - action: CreateSequence
    name: sessionSeq
    sequenceType: Ordered

  - action: CreateSequence
    name: anonymousUsernameSeq
    sequenceType: Ordered

  - action: CreateSequence
    name: chatChannelIdSeq
    sequenceType: Ordered

########## Functions ##########

  - action: CreateFunction
    name: arrayInsert
    idempotent: false
    language: javascript
    parameters: [array, index, value]
    code: "var idx = parseInt(index);\narray.add(idx, value);\nreturn array;"

  - action: CreateFunction
    name: arrayRemove
    idempotent: false
    language: javascript
    parameters: [array, index]
    code: "var idx = parseInt(index);\narray.remove(idx);\nreturn array;"

  - action: CreateFunction
    name: arrayReplace
    idempotent: false
    language: javascript
    parameters: [array, index, value]
    code: "var idx = parseInt(index);\narray.set(idx, value);\nreturn array;"

  - action: CreateFunction
    name: arrayMove
    idempotent: false
    language: javascript
    parameters: [array, fromIndex, toIndex]
    code: "var toIn = parseInt(toIndex);\nvar fromIn = parseInt(fromIndex);\narray.add(toIn, array.remove(fromIn));\nreturn array;"
