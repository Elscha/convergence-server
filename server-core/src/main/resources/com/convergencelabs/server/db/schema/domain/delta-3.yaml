version: 3
description: Schema to add roles and permissions to models and collections
changes:

########## CollectionPermissions ##########

  - action: CreateClass
    name: CollectionPermissions
    properties:
      - {name: read,       type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: write,      type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: create,     type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: remove,     type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: manage,     type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}

########## CollectionUserPermissions ##########

  - action: CreateClass
    name: CollectionUserPermissions
    properties:
      - {name: collection, type: Link,   linkedClass: Collection, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user, type: Link, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: permissions, type: Embedded, linkedClass: CollectionPermissions, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: CollectionUserPermissions
    name: CollectionUserPermissions.user_collection
    type: Unique
    properties: [user, collection]
    
  - action: CreateIndex
    className: CollectionUserPermissions
    name: CollectionUserPermissions.user
    type: NotUniqueHashIndex
    properties: [user]
  
  - action: CreateIndex
    className: CollectionUserPermissions
    name: CollectionUserPermissions.collection
    type: NotUniqueHashIndex
    properties: [collection]

########## Collection Changes ##########

  - action: AddProperty
    className: Collection
    property: {name: worldPermissions, type: Embedded, linkedClass: CollectionPermissions, constraints: {mandatory: false, notNull: true, readOnly: false}}
    
  - action: RunSQLCommand
    command: "UPDATE Collection SET worldPermissions = {'@type':'d', '@class':'CollectionPermissions', 'read':true, 'write':true, 'create':true, 'remove':true, 'manage':true}" 

########## ModelPermissions ##########

  - action: CreateClass
    name: ModelPermissions
    properties:
      - {name: read,   type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: write,  type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: remove, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}
      - {name: manage, type: Boolean, constraints: {mandatory: true, notNull: true, readOnly: false, default: false}}

########## ModelUserPermissions ##########

  - action: CreateClass
    name: ModelUserPermissions
    properties:
      - {name: model,       type: Link,   linkedClass: Model, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: user,        type: Link, linkedClass: User, constraints: {mandatory: true, notNull: true, readOnly: true}}
      - {name: permissions, type: Embedded, linkedClass: ModelPermissions, constraints: {mandatory: true, notNull: true}}

  - action: CreateIndex
    className: ModelUserPermissions
    name: ModelUserPermissions.user_model
    type: Unique
    properties: [user, model]
    
  - action: CreateIndex
    className: ModelUserPermissions
    name: ModelUserPermissions.user
    type: NotUniqueHashIndex
    properties: [user]
  
  - action: CreateIndex
    className: ModelUserPermissions
    name: ModelUserPermissions.model
    type: NotUniqueHashIndex
    properties: [model]

########## Model Changes ##########

  - action: AddProperty
    className: Model
    property: {name: overridePermissions, type: Boolean, constraints: {notNull: true, readOnly: false, default: false}}

  - action: AddProperty
    className: Model
    property: {name: worldPermissions, type: Embedded, linkedClass: ModelPermissions, constraints: {mandatory: false, notNull: true, readOnly: false}}
    
  - action: RunSQLCommand
    command: "UPDATE Model SET overridePermissions = true"
    
  - action: RunSQLCommand
    command: "UPDATE Model SET worldPermissions = {'@type':'d', '@class':'ModelPermissions', 'read':true, 'write':true, 'remove':true, 'manage':true}" 

  - action: AddProperty
    className: Model
    property: {name: userPermissions, type: LinkList, linkedClass: ModelUserPermissions}
    