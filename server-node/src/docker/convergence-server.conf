convergence {

  orient-db = {
    db-uri = ${ORIENT_DB_URI}
    admin-username = "root"
    admin-password = "password"
  }

  convergence-database = {
    database = "convergence"

    username = writer
    password = writer

    admin-username = admin
    admin-password = admin

    auto-install = {
      enabled = true
      pre-release = false
    }

    retry-delay = 30s
  }

  domain-databases {
    randomize-credentials = false
    pre-release = false
  }

  auto-create-domains = [
    {
      id = "example"
      displayName = "Example Domain"
      anonymousAuth: true
    }
  ]

  domain-shutdown-delay = 10 minutes

  realtime = {
    host = "0.0.0.0"
    port = 8080

    websocket {
      max-frames = 1024
      max-stream-duration = 10s
    }

    protocol = {
      handshake-timeout = 5s
      default-request-timeout = 10s
      heartbeat = {
        enabled = false
        ping-interval = 5s
        pong-timeout = 10s
      }
    }
  }

  rest {
    host = "0.0.0.0"
    port = 8081
    session-token-expiration = 60 minutes
    rest-domain-shutdown-delay = 10 minutes
    max-rest-actor-shutdown = 30 seconds
    master-admin-api-key = "master_admin_api_key"
  }

  smtp = {
    enabled: false
    username = "smpt-username"
    password = "smpt-username"
    host = "smpt.example.com"
    port = 587
  }

  registration {
    new-registration-to-address = "registrations@example.com"
    from-address = "registration@example.com"
    registration-rest-base-url = ${REGISTRATION_BASE_URL}
    admin-console-url = "${ADMIN_CONSOLE_URL}"
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"

    debug {
      unhandled = on
    }
  }

  remote {
    log-remote-lifecycle-events = off

    netty.tcp {
      port = 2551
      hostname = ${EXTERNAL_HOSTNAME}
    }
  }

  cluster {
    sharding.distributed-data.durable.keys = []
    seed-nodes = []
    roles = []
    auto-down-unreachable-after = 120s
  }

  http.server.idle-timeout = 60 minutes
  http.server.remote-address-header = on
}
