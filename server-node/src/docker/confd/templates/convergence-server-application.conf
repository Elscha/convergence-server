akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"

    debug {
      unhandled = on
    }
  }

  remote {
    log-remote-lifecycle-events = off

    netty.tcp {
      bind-hostname = "localhost"
      bind-port = 2551
      hostname = "server-node"
      port = 2551
    }
  }

  cluster {
    sharding.distributed-data.durable.keys = []

    seed-nodes = [
      "akka.tcp://Convergence@server-node:2551"
    ]

    roles = [
      "realTimeFrontend",
      "restFrontend",
      "backend"
    ]
  }

  http.server.idle-timeout = 60 minutes
  http.server.remote-address-header = on
}

convergence {

  domain-shutdown-delay = 10 minutes
  rest-domain-shutdown-delay = 10 minutes
  auth-token-expiration = 60 minutes

  domain-shutdown-delay = 10 minutes

  convergence-admins = {
  	{{ getenv "admin_rest_user" }} = "{{ getenv "admin_rest_password" }}"
  }

  orient-db = {
    db-uri = "{{ getenv "orient_db_uri" }}"
    rest-uri = "{{ getenv "orient_rest_uri" }}"
    admin-username = "{{ getenv "orient_admin_user" }}"
  	admin-password = "{{ getenv "orient_admin_pass" }}"
  }

  convergence-database = {
    database = "convergence"

    username = "{{ getenv "db_username" }}"
    password = "{{ getenv "db_password" }}"

    admin-username = "{{ getenv "db_admin_username" }}"
    admin-password = "{{ getenv "db_admin_password" }}"

    auto-install = {
      enabled: true
      pre-release: false
    }
    retry-delay = 30s
  }

  domain-databases {
  	randomize-credentials = {{ getenv "randomize_db_credentials" }}
  	pre-release: false
  }

  auto-create-domains = [
    {
      id = "example"
      displayName = "Example Domain"
      anonymousAuth: true
    }
  ]

  registration-base-url = "{{ getenv "registration_base_url" }}"
  admin-ui-url = "{{ getenv "admin_ui_url" }}"

  protocol = {
    handshake-timeout = 5s
    default-request-timeout = 10s
    heartbeat = {
      enabled = false
      ping-interval = 5s
      pong-timeout = 10s
    }
  }

  websocket = {
    host = "0.0.0.0"
    port = 8080
    max-frames = 1024
    max-stream-duration = 10s
  }

  rest {
  	host = "0.0.0.0"
    port = 8081
    rest-domain-shutdown-delay = 10 minutes
    auth-token-expiration = 60 minutes
    max-rest-actor-shutdown = 30 seconds
  }

  smtp = {
  	username = "registration@convergencelabs.com"
    password = "7MBCC(aTu&~+"
    new-registration-to-address = "registration@convergencelabs.com"
    from-address = "registration@convergencelabs.com"
    host = "dallas113.arvixeshared.com"
    port = 587
  }

  zoho = {
    enabled = {{ getenv "zoho_enabled" }}
    auth-token = "{{ getenv "zoho_auth_token" }}"
  }
}
